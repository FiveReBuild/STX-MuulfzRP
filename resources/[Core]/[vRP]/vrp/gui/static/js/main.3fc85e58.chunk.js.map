{"version":3,"sources":["styles/global.ts","pages/DefaultUi/modules/ProgressBar/components/ProgressBarElement/style.ts","pages/DefaultUi/modules/ProgressBar/components/ProgressBarElement/index.tsx","pages/DefaultUi/modules/ProgressBar/index.tsx","pages/DefaultUi/index.tsx","App.tsx","index.tsx"],"names":["createGlobalStyle","styled","div","ProgressBar","props","r","g","b","ProgressBarInner","ProgressBarLabel","ProgressBarElement","barData","this","text","React","Component","ProgressBarModule","progressBarEvent","event","data","act","console","log","createBar","pbar","updateValueOrText","name","value","removeBar","state","progressBars","window","addEventListener","progressBar","undefined","find","p","newBar","setState","progressBarComponent","newValue","newText","progressBarData","filter","i","enable","map","bar","DefaultUi","eventResolver","updateUiState","paused","enableUi","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fc85e58.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n  box-sizing: border-box;\n  }\n\n`;\n","import styled from 'styled-components';\n\ninterface ProgressBarProps {\n  r: string;\n  g: string;\n  b: string;\n}\n\nexport const DynamicProgressBar = styled.div`\n  position: relative;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const DynamicProgressBarTitle = styled.div`\n  height: 100%;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const DynamicProgressBarLabel = styled.div`\n  padding: 0;\n  margin: 0;\n  position: absolute;\n  width: 100%;\n  vertical-align: middle;\n  top: 0;\n  left: 0;\n  color: white;\n  font-weight: bold;\n  text-align: center;\n  text-shadow: 2px 2px black;\n`;\n\nexport const ProgressBar = styled.div<ProgressBarProps>`\n  position: absolute;\n  background-color: rgba(${props => props.r}, ${props => props.g}, ${props => props.b}, 0.3);\n`;\n\nexport const ProgressBarInner = styled.div<ProgressBarProps>`\n  background-color: rgba(${props => props.r}, ${props => props.g}, ${props => props.b}, 0.7);\n`;\n\nexport const ProgressBarLabel = styled.div`\n  position: absolute;\n  color: white;\n  font-weight: bold;\n  text-align: center;\n  text-shadow: 2px 2px black;\n`;\n","import React from 'react';\nimport { ProgressBarData } from '../../index';\nimport { ProgressBar, ProgressBarLabel, ProgressBarInner } from './style';\n\ninterface ProgressBarElementProps {\n  barData: ProgressBarData;\n}\n\n// eslint-disable-next-line react/prefer-stateless-function\nexport default class ProgressBarElement extends React.Component<ProgressBarElementProps> {\n  // eslint-disable-next-line no-useless-constructor\n  constructor(props: Readonly<ProgressBarElementProps>) {\n    super(props);\n  }\n\n  render() {\n    const { barData } = this.props;\n    return (\n      <>\n        <ProgressBar {...barData}>\n          <ProgressBarInner {...barData}>\n            <ProgressBarLabel>{barData.text}</ProgressBarLabel>\n          </ProgressBarInner>\n        </ProgressBar>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ProgressBarElement from './components/ProgressBarElement';\nimport VrpMessageData from '../../../../models/VrpMessageData';\nimport PauseMenuProps from '../../PauseMenuProps';\n\nexport interface ProgressBarData {\n  name: string;\n  anchor: string;\n  text: string;\n  r: string;\n  g: string;\n  b: string;\n  value: number;\n}\n\ninterface ProgressBarModuleState {\n  progressBars: ProgressBarData[];\n}\n\ntype ProgressBarModuleProps = PauseMenuProps;\n\ninterface ProgressBarMessageData extends VrpMessageData {\n  pbar: ProgressBarData;\n}\n\nclass ProgressBarModule extends React.Component<ProgressBarModuleProps, ProgressBarModuleState> {\n  constructor(props: PauseMenuProps) {\n    super(props);\n    this.state = { progressBars: [] };\n    window.addEventListener('message', this.progressBarEvent);\n  }\n\n  progressBarEvent = (event: MessageEvent) => {\n    const data = event.data as ProgressBarMessageData;\n    switch (data.act) {\n      case 'set_pbar':\n        console.log(data.act);\n        this.createBar(data.pbar);\n        break;\n      case 'set_pbar_val':\n      case 'set_pbar_text':\n        console.log(data.act);\n        this.updateValueOrText(data.name, data.value, data.text);\n        break;\n      case 'remove_pbar':\n        console.log(data.act);\n        this.removeBar(data.name);\n        break;\n      default:\n        break;\n    }\n  };\n\n  private createBar(progressBar: ProgressBarData) {\n    const { progressBars } = this.state;\n    const progressBarComponent = progressBars.find(p => p.name === progressBar.name);\n    if (progressBarComponent === undefined) {\n      const newBar = progressBar;\n      this.setState({ progressBars: [...progressBars, newBar] });\n    }\n  }\n\n  private updateValueOrText(name: string, value: number, text: string) {\n    const { progressBars } = this.state;\n    const progressBarComponent = progressBars.find(p => p.name === name);\n    if (progressBarComponent !== undefined) {\n      const newValue = value !== undefined ? value : progressBarComponent.value;\n      const newText = text !== undefined ? text : progressBarComponent.text;\n\n      progressBarComponent.value = newValue;\n      progressBarComponent.text = newText;\n\n      this.setState({ progressBars });\n    }\n  }\n\n  private removeBar(name: string) {\n    const { progressBars } = this.state;\n    const progressBarData = progressBars.filter(i => i.name !== name);\n\n    this.setState({ progressBars: progressBarData });\n  }\n\n  render() {\n    const { progressBars } = this.state;\n    const { enable } = this.props;\n    return (\n      <>\n        {enable && (\n          <>\n            {progressBars.map(bar => {\n              return <ProgressBarElement barData={bar} />;\n            })}\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ProgressBarModule;\n","import React from 'react';\nimport ProgressBarModule from './modules/ProgressBar';\nimport VrpMessageData from '../../models/VrpMessageData';\n\ninterface DefaultUiState {\n  enable: boolean;\n}\n\nexport default class DefaultUi extends React.Component<unknown, DefaultUiState> {\n  constructor(props: Readonly<unknown>) {\n    super(props);\n    this.state = { enable: true };\n    window.addEventListener('message', this.eventResolver);\n  }\n\n  eventResolver = (event: MessageEvent) => {\n    const data = event.data as VrpMessageData;\n\n    if (data.act === 'pause_change') {\n      this.updateUiState(data.paused);\n    }\n  };\n\n  updateUiState(enableUi: boolean): void {\n    this.setState({ enable: !enableUi });\n  }\n\n  render() {\n    const { enable } = this.state;\n    return (\n      <>\n        <h1>\n          Muulfz VRP - Pause=\n          {enable}\n        </h1>\n        <ProgressBarModule enable={enable} />\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nimport GlobalStyle from './styles/global';\nimport DefaultUi from './pages/DefaultUi';\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <DefaultUi />\n      <GlobalStyle />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}