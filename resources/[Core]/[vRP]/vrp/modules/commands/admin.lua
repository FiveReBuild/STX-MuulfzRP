---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Muulfz.
--- DateTime: 8/12/2020 9:12 PM
---

RegisterCommand(vRP.lang.commands.admin.kick.cmd, function(source, args, rawCommand)
    local user_id = vRP.getUserId(source)
    local target_id = parseInt(args[1])
    vRP.adminKick(user_id, target_id, vRP.lang.commands.admin.kick.reason_default)
end)

RegisterCommand(vRP.lang.commands.admin.coords.cmd, function(source, args, rawCommand)
    local user_id = vRP.getUserId(source)
    vRP.adminCoordinates(user_id)
end)

RegisterCommand(vRP.lang.commands.admin.revive.cmd, function(source, args, rawCommand)
    local user_id = vRP.getUserId(source)
    local target_id = parseInt(args[1])
    vRP.adminRevive(user_id, target_id)
end)

RegisterCommand(vRP.lang.commands.admin.noclip.cmd, function(source, args, rawCommand)
    local user_id = vRP.getUserId(source)
    local target_id = parseInt(args[1])
    vRP.adminNoclip(user_id, target_id)
end)

RegisterCommand(vRP.lang.commands.admin.setMoney.cmd, function(source, args, rawCommand)
    local user_id = vRP.getUserId(source)
    local id = tonumber(args[1])
    local moneyType = args[2]
    local value = tonumber(args[3])

    if type(value) == "number" and type(id) == "number" then
        if moneyType == tostring(vRP.lang.money.types.bank) or moneyType == tostring(vRP.lang.money.types.wallet) then
            vRP.adminSetMoney(user_id, id, moneyType, value)
        end
        -- type invalido
    end
end)

RegisterCommand(vRP.lang.commands.admin.create_drop.cmd, function (source, args, rawCommand)
    local user_id = vRP.getUserId(source)
    if #args >= 5 then
        local x, y, z = tonumber(args[1]), tonumber(args[2]), tonumber(args[3])
        local item_amount = tonumber(args[5])
        if x and y and z and item_amount then
            local item_id = args[4]
            vRP.adminCreateDrop(user_id, x, y, z, item_id, item_amount)
        else
            vRPclient._notify(source, vRP.lang.common.invalid_value())
        end
    else
        vRPclient._notify(source, vRP.lang.commands.missing_arguments())
    end
end)

RegisterCommand(vRP.lang.commands.admin.delete_drop.cmd, function (source, args, rawCommand)
    local user_id = vRP.getUserId(source)
    if #args >= 1 then
        local drop_id = tonumber(args[1])
        if drop_id then
            vRP.adminDeleteDrop(user_id, drop_id)
        else
            vRPclient._notify(source, vRP.lang.common.invalid_value())
        end
    else
        vRPclient._notify(source, vRP.lang.commands.missing_arguments())
    end
end)